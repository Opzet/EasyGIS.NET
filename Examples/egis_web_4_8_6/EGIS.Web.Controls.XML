<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EGIS.Web.Controls</name>
    </assembly>
    <members>
        <member name="T:EGIS.Web.Controls.GeoJsonObject">
            <summary>
            abstract base GeoJSON class
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.FeatureCollection">
            <summary>
            GeoJSON FeatureCollection
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.Feature">
            <summary>
            GeoJSON Feaure
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.Geometry">
            <summary>
            abstract GeoJSON base Geometry class
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.Point">
            <summary>
            GeoJSON Point
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.LineString">
            <summary>
            GeoJSON LineString
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.Polygon">
            <summary>
            GeoJSON Polygon
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.StyleOptions">
            <summary>
            GeoJSON equivalent of google.maps.Data.StyleOptions object specification
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.TooltipHeaderFieldNamePair">
            <summary>
            Simple Header / FieldName Pair class used to provide custom ToolTips in the QuantileCustomRenderSettings
            </summary>
            <remarks>
            <para>Each TooltipHeaderFieldNamePair object represents a single line that is displayed in a tooltip.</para>
            </remarks>
            <seealso cref="T:EGIS.Web.Controls.QuantileCustomRenderSettings"/>
        </member>
        <member name="P:EGIS.Web.Controls.TooltipHeaderFieldNamePair.HeaderText">
            <summary>
            Gets or sets the text to appear as the header of a line in a tooltip
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.TooltipHeaderFieldNamePair.FieldName">
            <summary>
            Gets or sets the name of the DBF field (or column in joined table) to get the tooltip data from.
            </summary>
        </member>
        <member name="M:EGIS.Web.Controls.TooltipHeaderFieldNamePair.#ctor(System.String,System.String)">
            <summary>
            Constructs a new TooltipHeaderFieldNamePair object
            </summary>
            <param name="headerText">The text to appear as the header of a line in a tooltip</param>
            <param name="fieldName">The name of the DBF field (or column in joined table) to get the tooltip data from </param>
        </member>
        <member name="T:EGIS.Web.Controls.QuantileCustomRenderSettings">
            <summary>
            QuantileCustomRenderSettings implements the ICustomRenderSettings interface and is used to 
            provide dynamic render settings.
            </summary>
            <remarks>
            <para>
            QuantileCustomRenderSettings is used to render individual shape colors in a shapefile layer according to a specified range of values. For example,
            the color of the rendered shape could be green if field1 is between 0 and 100, yellow if field 1 is between 100 and 200, or red if
            it is greater than 200.
            </para>
            <para>The class also provides the ability to join an external DataTable on a shapefile's DBF data file</para>
            </remarks>
            <seealso cref="T:EGIS.ShapeFileLib.ICustomRenderSettings"/>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.#ctor(EGIS.ShapeFileLib.RenderSettings,System.Drawing.Color[],System.Double[],System.String,System.Data.DataTable,System.String,System.String)">
            <summary>
            Constructs a new QuantileCustomRenderSettings instance
            </summary>
            <param name="renderSettings">Reference to a ShapeFile RenderSettings</param>
            <param name="quantileColors">Array of Colors to use. The number of Color elements should be 1 more than the number of quantile elements</param>
            <param name="quantiles">Array of quantile values. Each successive element must be greater than the previous element. Example - {10, 50, 75}</param>
            <param name="quantileKey">The name of the column in the imported data used to determine what color to render a shape </param>
            <param name="importData">Data to join on the shapefile layer.</param>
            <param name="shapeJoinKey">The column in the shapefile layer's dbf file used to join to importData</param>
            <param name="importJoinKey">The column in importData used to join on the shapefile layer</param>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.#ctor(EGIS.ShapeFileLib.RenderSettings,System.Drawing.Color[],System.Double[],System.String,System.Data.DataTable,System.String,System.String,System.Collections.Generic.List{EGIS.Web.Controls.TooltipHeaderFieldNamePair})">
            <summary>
            Constructs a new QuantileCustomRenderSettings instance
            </summary>
            <param name="renderSettings">Reference to a ShapeFile RenderSettings</param>
            <param name="quantileColors">Array of Colors to use. The number of Color elements should be 1 more than the number of quantile elements</param>
            <param name="quantiles">Array of quantile values. Each successive element must be greater than the previous element. Example - {10, 50, 75}</param>
            <param name="quantileKey">The name of the column in the imported data used to determine what color to render a shape </param>
            <param name="importData">Data to join on the shapefile layer.</param>
            <param name="shapeJoinKey">The column in the shapefile layer's dbf file used to join to importData</param>
            <param name="importJoinKey">The column in importData used to join on the shapefile layer</param>
            <param name="tooltipHeaderFieldList">List of TooltipHeaderFieldNamePair objects used to create a custom tooltip</param>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.#ctor(EGIS.ShapeFileLib.RenderSettings,System.Drawing.Color[],System.Double[],System.String)">
            <summary>
            Constructs a new QuantileCustomRenderSettings instance
            </summary>
            <param name="renderSettings">Reference to a ShapeFile RenderSettings</param>
            <param name="quantileColors">Array of Colors to use. The number of Color elements should be 1 more than the number of quantile elements</param>
            <param name="quantiles">Array of quantile values. Each successive element must be greater than the previous element. Example - {10, 50, 75}</param>
            <param name="shapeFieldName">The name of the shapefile dbf field used to determine what color to render a shape </param>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.#ctor(EGIS.ShapeFileLib.RenderSettings,System.Drawing.Color[],System.Double[],System.String,System.Collections.Generic.List{EGIS.Web.Controls.TooltipHeaderFieldNamePair})">
            <summary>
            Constructs a new QuantileCustomRenderSettings instance
            </summary>
            <param name="renderSettings">Reference to a ShapeFile RenderSettings</param>
            <param name="quantileColors">Array of Colors to use. The number of Color elements should be 1 more than the number of quantile elements</param>
            <param name="quantiles">Array of quantile values. Each successive element must be greater than the previous element. Example - {10, 50, 75}</param>
            <param name="shapeFieldName">The name of the shapefile dbf field used to determine what color to render a shape </param>
            <param name="tooltipHeaderFieldList">List of TooltipHeaderFieldNamePair objects used to create a custom tooltip</param>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.GetRecordFillColor(System.Int32)">
            <summary>
            Implementation of the ICustomRenderSettings GetRecordFillColor member
            </summary>
            <param name="recordNumber"></param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Web.Controls.QuantileCustomRenderSettings.GetRecordToolTip(System.Int32)">
            <summary>
            Implementation of the ICustomRenderSettings GetRecordToolTip member
            </summary>
            <param name="recordNumber"></param>
            <returns></returns>
        </member>
        <member name="P:EGIS.Web.Controls.QuantileCustomRenderSettings.UseCustomTooltips">
            <summary>
            Implementation of the ICustomRenderSettings UseCustomTooltips member
            </summary>
        </member>
        <member name="T:EGIS.Web.Controls.SFMap">
            <summary>
            The SFMap control is no longer supported. This class now only contains some statuc utility methods to load egp xml project files
            </summary>
        </member>
        <member name="M:EGIS.Web.Controls.SFMap.ReadEGPProject(System.String)">
            <summary>
            static method to read a .egp project file
            </summary>
            <param name="absPath">Absolute path of the .egp file</param>
            <returns>A MapProject object containing the project layers and map background color</returns>
            <remarks>This method provides an easy means of creating a List of ShapeFiles to be used
            in a MapHandler</remarks>
        </member>
        <member name="M:EGIS.Web.Controls.SFMap.UpdateRenderSettings(System.Collections.Generic.List{EGIS.ShapeFileLib.ShapeFile},EGIS.Projections.ICRS,EGIS.Projections.ICRS)">
            <summary>
            updates RenderSettings defined in sourceCrs to their equivalent in destinationCrs
            </summary>
            <param name="layers"></param>
            <param name="sourceCrs"></param>
            <param name="destinationCrs"></param>
            <remarks>Adjusts min/max zoom levels. This method should be used to update layer's rendersettings that were created using wgs84 
            before rendering th elayer in Web Mercator</remarks>
        </member>
        <member name="M:EGIS.Web.Controls.SFMap.UpdateRenderSettingsForWebMercator(System.Collections.Generic.List{EGIS.ShapeFileLib.ShapeFile},EGIS.Projections.ICRS)">
            <summary>
            updates RenderSettings defined in sourceCrs to their equivalent in Web Mercator EPSG 3857
            </summary>
            <param name="layers"></param>
            <param name="sourceCrs"></param>
        </member>
        <member name="M:EGIS.Web.Controls.SFMap.GetExtent(System.Collections.Generic.List{EGIS.ShapeFileLib.ShapeFile},EGIS.Projections.ICRS)">
            <summary>
            gets the Extent of a given list of shapefiles in coordinates defined by crs
            </summary>
            <param name="layers"></param>
            <param name="crs"></param>
            <returns></returns>
        </member>
        <member name="T:EGIS.Web.Controls.TiledMapHandler">
            <summary>
            Generic IHttpHandler for handling TiledMap requests
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.TiledMapHandler.CacheOnServer">
            <summary>
            Whether or not to cache requested image requests on the server
            </summary>
            <remarks>Default value is true. Derived classes should override if neccessary</remarks>
        </member>
        <member name="P:EGIS.Web.Controls.TiledMapHandler.CacheDirectory">
            <summary>
            Name of the directory (relative to the handler) used to store cached images
            </summary>
            <remarks>Default value is "tilecache". Derived classes should override if a different directory is required.
            <para>Note it may be neccessary to grant write permissions on the directory</para></remarks>        
        </member>
        <member name="P:EGIS.Web.Controls.TiledMapHandler.MapBackgroundColor">
            <summary>
            Color used to render the background of map tile images
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EGIS.Web.Controls.TiledMapHandler.CreateCachePath(System.Web.HttpContext,System.Int32,System.Int32,System.Int32)" -->
        <member name="M:EGIS.Web.Controls.TiledMapHandler.CreateMapLayers(System.Web.HttpContext)">
            <summary>
            Abstract method to create the Map layers for the request
            </summary>
            <param name="context"></param>
            <returns></returns>
            <remarks>Derived classes must implement the CreateMapLayers method</remarks>
        </member>
        <member name="M:EGIS.Web.Controls.TiledMapHandler.OnBeginRequest(System.Web.HttpContext)">
            <summary>
            virtual method to create the Map layers and custom render settings for the request
            </summary>
            <param name="context"></param>
            <returns></returns>
            <remarks>
            <para>The default method just calls CreateMapLayers(context) and sets renderSettings to null</para>
            <para>If you are using custom render settings layers.Count must equal renderSettings.Count. If renderSettings is null
            then Custom Render settings will not be used. If any items in renbderSettings are null then the corresponding layer will not
            use CustomRenderSettings</para>
            <para>
            Not used yet!
            </para>
            </remarks>
        </member>
        <member name="M:EGIS.Web.Controls.TiledMapHandler.ProcessGetShapeAttributesRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:EGIS.Web.Controls.TiledMapHandler.GetRecordAttributes(System.Web.HttpContext,EGIS.ShapeFileLib.ShapeFile,System.Int32)">
            <summary>
            returns a list of key/values for each attributes of a record
            </summary>
            <param name="context"></param>
            <param name="layer"></param>
            <param name="recordIndex"></param>
            <returns></returns>
            <remarks>
            The default implementation will return a key/value for every attributes.
            If you wish to add additional attributes, perhaps by joining on another table, or exclude
            some attributes override this method
            </remarks>
        </member>
        <member name="T:EGIS.Web.Controls.VectorTileGenerator">
             <summary>
             Utility class to generate Vector Tile data from ShapeFile layers.
             </summary>
             <remarks>
             <para>
             This class can be combined with EGIS.Mapbox.Vector.Tile.VectorTileParser to create Mapbox vector tiles.
             </para>
             </remarks>
             <example> Sample code to create a Mapbox Vector Tile from a shapefile. 
             <code>        
            public void CreateMapboxTile(List&lt;ShapeFile&gt; mapLayers, string vectorTileFileName)
            {
                //create a VectorTileGenerator
                VectorTileGenerator tileGenerator = new VectorTileGenerator();
                List&lt;VectorTileLayer&gt; tileLayers = tileGenerator.Generate(tileX, tileY, zoomLevel, mapLayers);
                //encode the vector tile in Mapbox vector tile format
                using (System.IO.FileStream fs = new System.IO.FileStream(vectorTileFileName, System.IO.FileMode.Create))
                {
                    EGIS.Mapbox.Vector.Tile.VectorTileParser.Encode(tileLayers, fs);
                }
            }
             </code>                                                   
             </example>
        </member>
        <member name="T:EGIS.Web.Controls.VectorTileGenerator.OutputTileFeatureDelegate">
            <summary>
            delegate to return whether a feature should be output at a given zoom level and tile coordinates
            </summary>
            <param name="shapeFile"></param>
            <param name="recordIndex"></param>
            <param name="tileZ"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:EGIS.Web.Controls.VectorTileGenerator.#ctor">
            <summary>
            VectorTileGenerator constructor 
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileGenerator.TileSize">
            <summary>
            The size of the vector tiles
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileGenerator.SimplificationPixelThreshold">
            <summary>
            Simplification Threshold. Default is 1
            </summary>
            <remarks>
            This property will simplify geometry points when the vector data is generated at lower tile
            zoom levels. In general this property should not be changed from the default value of 1
            </remarks>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileGenerator.OutputMeasureValues">
            <summary>
            whether to output PolylineM Measures.
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileGenerator.MeasuresAttributeName">
            <summary>
            Output Measures Attribute name. Default is "_MValues"
            </summary>
        </member>
        <member name="M:EGIS.Web.Controls.VectorTileGenerator.Generate(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{EGIS.ShapeFileLib.ShapeFile},EGIS.Web.Controls.VectorTileGenerator.OutputTileFeatureDelegate)">
            <summary>
            Generates a Vector Tile from ShapeFile layers
            </summary>
            <param name="tileX">Tile X coordinate</param>
            <param name="tileY">Tile Y coordinate</param>
            <param name="zoomLevel">Tile zoom level</param>
            <param name="layers">List of ShapeFile layers</param>
            <param name="outputTileFeature">optional OutputTileFeatureDelegate which will be called with each record feature that will be added to the tile. This delegate is useful to exclude feaures at tile zoom levels</param>
            <returns></returns>
        </member>
        <member name="T:EGIS.Web.Controls.VectorTileHandler">
            <summary>
            Generic IHttpHandler handler that serves Mapbox .mvt Vector Tiles 
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileHandler.CacheOnServer">
            <summary>
            Whether or not to cache requested image requests on the server
            </summary>
            <remarks>Default value is true. Derived classes should override if neccessary</remarks>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileHandler.CacheDirectory">
            <summary>
            Name of the directory (relative to the handler) used to store cached images
            </summary>
            <remarks>Default value is "tilecache". Derived classes should override if a different directory is required.
            <para>Note it may be neccessary to grant write permissions on the directory</para></remarks>        
        </member>
        <member name="M:EGIS.Web.Controls.VectorTileHandler.CreateCachePath(System.Web.HttpContext,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates path to a tile request if CacheOnServer is true
            </summary>
            <param name="context"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="zoom"></param>
            <returns></returns>
            <remarks>Default name is  CacheDirectory/zoom_tileX_tileY.mvt </remarks>
        </member>
        <member name="M:EGIS.Web.Controls.VectorTileHandler.CreateMapLayers(System.Web.HttpContext)">
            <summary>
            Abstract method to create the Map layers for the request
            </summary>
            <param name="context"></param>
            <returns></returns>
            <remarks>Derived classes must implement the CreateMapLayers method</remarks>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileHandler.TileSize">
            <summary>
            Vector Tile Size. Default is 512 x 512
            </summary>
        </member>
        <member name="P:EGIS.Web.Controls.VectorTileHandler.SimplificationPixelThreshold">
            <summary>
            Simplification Threshold. Default is 1
            </summary>
            <remarks>
            This property will simplify geometry points when the vector data is generated at lower tile
            zoom levels. In general this property should not be changed from the default value of 1
            </remarks>
        </member>
    </members>
</doc>
